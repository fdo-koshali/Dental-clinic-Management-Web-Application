CREATE DATABASE dental;

USE dental;

CREATE TABLE treatment (
  ID SMALLINT NOT NULL UNIQUE AUTO_INCREMENT,
  NAME VARCHAR(50) UNIQUE,
  INDICATION VARCHAR(50),
  DESCRIPTION VARCHAR(100),
  DURATION TIME NOT NULL,
  COST DECIMAL(10,2) NOT NULL,
  WORST_OUT_COME VARCHAR(200),
  STATUS BOOLEAN NOT NULL,
  PRIMARY KEY (ID)
);

ALTER TABLE `dental`.`treatment`
CHANGE COLUMN `INDICATION` `INDICATION` VARCHAR(150) NULL DEFAULT NULL,
CHANGE COLUMN `DESCRIPTION` `DESCRIPTION` VARCHAR(150) NULL DEFAULT NULL;

CREATE TABLE users (
  USER_ID VARCHAR(15) NOT NULL,
  ROLE VARCHAR(20) NOT NULL,
  FIRST_NAME VARCHAR(30) NOT NULL,
  LAST_NAME VARCHAR(30) NOT NULL,
  EMAIL VARCHAR(50) ,
  PHONE_NUMBER VARCHAR(15),
  LINE_1 VARCHAR(30),
  IMAGE VARCHAR(256),
  LINE_2 VARCHAR(30),
  CITY VARCHAR(30),
  SATATE VARCHAR(30),
  POSTAL_CODE VARCHAR(6),
  PASSWORD VARCHAR(256),
  STATUS BOOLEAN NOT NULL,
  PRIMARY KEY (USER_ID)
);

CREATE TABLE item_data (
  ITEM_ID VARCHAR(15) NOT NULL,
  ITEM_NAME VARCHAR(40) NOT NULL,
  ITEM_DESCRIPTION VARCHAR(100),
  UNIT VARCHAR(10) NOT NULL,
  STATUS BOOLEAN NOT NULL,
  PRIMARY KEY (ITEM_ID)
);

CREATE TABLE stock (
  ITEM_ID VARCHAR(15) NOT NULL,
  UPDATE_DATE DATE NOT NULL,
  COUNT SMALLINT NOT NULL,
  PRIMARY KEY (ITEM_ID),
  FOREIGN KEY (ITEM_ID) REFERENCES item_data(ITEM_ID)
);

CREATE TABLE appointment (
  APPOINTMNET_ID VARCHAR(15) NOT NULL,
  TREATMENT_ID SMALLINT NOT NULL,
  DOCTOR_ID VARCHAR(15) NOT NULL,
  PATIENT_ID VARCHAR(15) NOT NULL,
  DATE DATE NOT NULL,
  TIME TIME NOT NULL,
  PRICE DECIMAL(10,2),
  PAYMENT_STATUS VARCHAR(15),
  PAYMENT_DATE DATE,
  DOCTOR_UPDATE VARCHAR(500),
  PRIMARY KEY (APPOINTMNET_ID),
  FOREIGN KEY (TREATMENT_ID) REFERENCES treatment(ID),
  FOREIGN KEY (DOCTOR_ID) REFERENCES users(USER_ID),
  FOREIGN KEY (PATIENT_ID) REFERENCES users(USER_ID)
);

CREATE TABLE treatment_medicine (
  APPOINTMNET_ID VARCHAR(15) NOT NULL,
  ITEM_ID VARCHAR(15) NOT NULL,
  COUNT SMALLINT NOT NULL,
  PRIMARY KEY (APPOINTMNET_ID,ITEM_ID),
  FOREIGN KEY (ITEM_ID) REFERENCES item_data(ITEM_ID),
  FOREIGN KEY (APPOINTMNET_ID) REFERENCES appointment(APPOINTMNET_ID)
);

CREATE TABLE related_accounts (
  MAIN_ID VARCHAR(15) NOT NULL,
  RELATED_ID VARCHAR(15) NOT NULL,
  RELATIONSHIP VARCHAR(15) NOT NULL,
  PRIMARY KEY (MAIN_ID,RELATED_ID),
  FOREIGN KEY (MAIN_ID) REFERENCES users(USER_ID),
  FOREIGN KEY (RELATED_ID) REFERENCES users(USER_ID)
);

CREATE TABLE grn (
  ITEM_ID VARCHAR(15) NOT NULL,
  RECEIVED_DATE DATE NOT NULL,
  QUANTITY SMALLINT NOT NULL,
  PRIMARY KEY (ITEM_ID,RECEIVED_DATE),
  FOREIGN KEY (ITEM_ID) REFERENCES item_data(ITEM_ID)
);

CREATE TABLE grn_request (
  ORDER_ID VARCHAR(15) NOT NULL,
  DATE DATE NOT NULL,
  TOTAL_VALUE DECIMAL(10.2),
  PAID_VALUE DECIMAL(10,2),
  PAYMENT_STATUS VARCHAR(15),
  SUPPEIR_ID VARCHAR(15) NOT NULL,
  ORDER_STATUS VARCHAR(15),
  PRIMARY KEY (ORDER_ID),
  FOREIGN KEY (SUPPEIR_ID) REFERENCES users(USER_ID)
);

CREATE TABLE grn_request_items (
  ORDER_ID VARCHAR(15) NOT NULL,
  ITEM_ID VARCHAR(15) NOT NULL,
  QUANTITY SMALLINT NOT NULL,
  PRIMARY KEY (ORDER_ID,ITEM_ID),
  FOREIGN KEY (ITEM_ID) REFERENCES item_data(ITEM_ID),
  FOREIGN KEY (ORDER_ID) REFERENCES grn_request(ORDER_ID)
);

CREATE TABLE holidays (
  DATE DATE NOT NULL
);

CREATE TABLE setting (
  LOW_STOCK_NOTIFICATION BOOLEAN,
  LOW_STOCK_COUNT SMALLINT
);

ALTER TABLE `dental`.`appointment` 
ADD COLUMN `STATUS` TINYINT NOT NULL DEFAULT 1 AFTER `DOCTOR_UPDATE`;

ALTER TABLE `dental`.`users` 
CHANGE COLUMN `EMAIL` `EMAIL` VARCHAR(50) NOT NULL ,
ADD UNIQUE INDEX `EMAIL_UNIQUE` (`EMAIL` ASC) VISIBLE;
;

ALTER TABLE `dental`.`setting` 
CHANGE COLUMN `LOW_STOCK_NOTIFICATION` `LOW_STOCK_NOTIFICATION` TINYINT(1) NOT NULL ,
CHANGE COLUMN `LOW_STOCK_COUNT` `LOW_STOCK_COUNT` SMALLINT NOT NULL ,
ADD UNIQUE INDEX `LOW_STOCK_NOTIFICATION_UNIQUE` (`LOW_STOCK_NOTIFICATION` ASC) VISIBLE,
ADD UNIQUE INDEX `LOW_STOCK_COUNT_UNIQUE` (`LOW_STOCK_COUNT` ASC) VISIBLE;
;

ALTER TABLE `dental`.`grn_request` 
CHANGE COLUMN `PAID_VALUE` `PAID_VALUE` DECIMAL(10,2) NULL DEFAULT 0.00 ;

ALTER TABLE `dental`.`appointment` 
DROP COLUMN `TIME`,
ADD COLUMN `START_TIME` TIME NOT NULL AFTER `DATE`,
ADD COLUMN `END_TIME` TIME NOT NULL AFTER `START_TIME`;

ALTER TABLE `dental`.`appointment` 
CHANGE COLUMN `PRICE` `PRICE` DECIMAL(10,2) NULL DEFAULT 0.00 ,
CHANGE COLUMN `PAYMENT_STATUS` `PAYMENT_STATUS` VARCHAR(15) NULL DEFAULT 'pending' ,
CHANGE COLUMN `STATUS` `STATUS` VARCHAR(15) NOT NULL DEFAULT 'upcoming' ;

ALTER TABLE `dental`.`holidays` 
ADD UNIQUE INDEX `DATE_UNIQUE` (`DATE` ASC);
;

